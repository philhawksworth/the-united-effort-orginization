---
layout: layouts/base.liquid
title: Find Affordable Housing
permalink: 
  build: "/housing/affordable-housing/index.html"
  serverless: "/housing/affordable-housing/filter"
pageClass: "page-housing"
---
{% assign updateButtonStr = "Update results" %}
{% assign query = eleventy.serverless.query %}
{% assign housingdb = query | housingResults %}
{% assign num_results = housingdb | size %}
{% assign num_filters_applied = query | numFiltersApplied %}
{% capture num_results_snippet %}
  Showing {% if num_filters_applied == 0 %}all {% endif %}{{num_results}} {% if num_results == 1 %}property{% else %}properties{% endif %}
{% endcapture %}

{{ eventBody | log }}
<script>
function CopyUrl() {
  navigator.clipboard.writeText(window.location.href);
  document.getElementById("copy-url-done").removeAttribute("hidden");
  return false;
}

// Show a loading message by changing the submit button to say "Loading..."
function ShowLoading() {
  let submitButton = document.getElementById("filter-submit");
  submitButton.value = "Loading...";
  submitButton.disabled = "disabled";
}

function HideLoading() {
  let submitButton = document.getElementById("filter-submit");
  submitButton.value = "{{updateButtonStr}}";
  submitButton.removeAttribute("disabled");
}

// Show a hidden checkbox with id optionId depending on the value ofinputId.
function ToggleHiddenOption(optionId, inputId) {
  let option = document.getElementById(optionId);
  let input = document.getElementById(inputId);
  if (input.value) {
    option.parentElement.removeAttribute("hidden");
  } else {
    option.parentElement.setAttribute("hidden", "hidden");
  }
}

function ToggleRentOption() {
  ToggleHiddenOption("include-unknown-rent", "rent-max");
}

function ToggleIncomeOption() {
  ToggleHiddenOption("include-unknown-income", "income");
}

// If the filtering form GETs the results page's url with
// the anchor hash (e.g. action="/affordable-housing/filter#results")
// then the form submission button will be disabled and the
// page will not reload if the user clicks on the submit button
// without first changing the filter state.  So, to force a 
// page reload every time, have the form GET e.g. 
// /affordable-housing/filter and manually scroll to the anchor
// after the page loads.  Also ensure the rent and income checkboxes
// are shown if those fields are filled. 
{% if num_filters_applied > 0 %} 
function OnWindowLoad() {
  ToggleRentOption();
  ToggleIncomeOption();
  location.hash = "#results";
}
window.onload = function() {OnWindowLoad()};
{% endif %}

function OnPageShow() {
  // When the user departs the page by applying filters, the submit
  // button text changes to a loading message.  Ensure that loading
  // message is gone if the user returns to the page via the back
  // navigation arrow.
  HideLoading();
}

window.onpageshow = function() {OnPageShow()};

</script>

<h1>{{title}}</h1>
<p class="noprint bold">
{{num_results_snippet}}
<p>
{% if num_filters_applied == 0 %}
<p>
Use the filter options below to narrow your search.
</p>
{% else %}
<p class="noprint">
{{num_filters_applied}} {% if num_filters_applied == 1 %}filter is {% else %}filters are {% endif %}applied. <a href="/housing/affordable-housing">Clear filters</a>
</p>
{% endif %}


<form action="/housing/affordable-housing/filter" action="get" id="housing-search" class="housing_search" onsubmit="ShowLoading();">
  
  {% assign filterValues = filterValues | updateFilterState: query %}

  {% for section in filterValues %}
  <fieldset>
    <legend>{{section.heading}}</legend>
    <div class="option_columns">
    {% if section.name == "unitType" %}
      {% assign sortedOpts = section.options | sortUnitType: "name" %}
    {% elsif section.name == "availability" %}
      {% assign sortedOpts = section.options | sortAvailability: "name" %}
    {% else %}
      {% assign sortedOpts = section.options | sort: "name" %}
    {% endif %}
    {% for opt in sortedOpts %}
      {% assign optId = section.name | append : '-' | append: opt.name | downcase | replace: ' ', '-' %}
      <input type="checkbox" id="{{optId}}" value="{{opt.name}}" name="{{section.name}}" {% if opt.selected %}checked{% endif %}>
      {% if opt.name == "SRO" %}
          {% assign label = '<abbr title="Single Room Occupancy">SRO</abbr>' %}
      {% else %}
          {% assign label = opt.name %}
      {% endif %}
      <label for="{{optId}}">{{label}}</label><br/>
    {% endfor %}
    </div>
  </fieldset>
  {% endfor %}

  <fieldset>
    <legend>Rent</legend>
    <div>
      <label for="rent-max">Maximum ($ per month)</label><br />
      <input type="number" oninput="ToggleRentOption();" min="0" id="rent-max" name="rentMax" value="{{query.rentMax | escape}}"><br/>
      <span id="include-unknown-rent-container" hidden>
        <input type="checkbox" id="include-unknown-rent" name="includeUnknownRent"
        {% if num_filters_applied == 0 or query.includeUnknownRent == "on" %}checked{% endif %}>
        <label for="include-unknown-rent">Include properties with no rent information</label>
      </span>
    </div>
  </fieldset>

  <fieldset>
    <legend>Income</legend>
    <div>
      <label for="income">Yearly Income ($)</label>
      <span class="tooltip_entry">
        <span class="icon_query"></span>
        <span class="tooltip_content">
          Provide your income to hide properties you are not eligible for. Your information will not be stored.
        </span>
      </span>
      <br />
      <input type="number" oninput="ToggleIncomeOption();" min="0" id="income" name="income" value="{{query.income | escape}}"><br/>
      <span id="include-unknown-income-container" hidden>
        <input type="checkbox" id="include-unknown-income" name="includeUnknownIncome"
        {% if num_filters_applied == 0 or query.includeUnknownIncome == "on" %}checked{% endif %}>
        <label for="include-unknown-income">Include properties with no income limit information</label>
      </span>
    </div>
  </fieldset>

  <fieldset>
    <legend>Property Name</legend>
    <div>
      <label for="property-name">Name</label><br />
      <input type="text" aria-label="Property Name" id="property-name" value="{{query.propertyName | escape}}" name="propertyName">
    </div>
  </fieldset>

  <div class="form_controls">
    <input type="submit" id="filter-submit" class="btn btn_primary noprint" value="{{updateButtonStr}}"/>
  </div>
</form>

<a id="results"></a>
{% if eleventy.serverless.query %}
  {% comment %} <p class="noprint">To save this search, bookmark this page or <a href="javascript:CopyUrl();">copy the URL</a> <span id="copy-url-done" hidden>&#10003;</span></p> {% endcomment %}
  {% if num_results > 0 %}
    <div class="align-end flex stack-reversed">
      <p class="noprint bold">
      {{num_results_snippet}}
      </p>
      <div>
        <a class="btn btn_secondary noprint btn_print " title="Print these results" href="javascript:window.print();">
          <svg role="img" aria-hidden="true" focusable="false" class="icon ">
            <use xlink:href="/images/sprites.svg#print"></use>
          </svg>
          Print results
        </a>
        {% comment %} 
        <a class="btn btn_secondary noprint btn_download " title="Download these results in CSV format">
           <svg role="img" aria-hidden="true" focusable="false" class="icon ">
            <use xlink:href="/images/sprites.svg#download"></use>
          </svg>
          CSV
        </a>
        {% endcomment %}
        <a class="btn btn_secondary noprint btn_bookmark " title="Copy the URL of this search" href="javascript:CopyUrl();">
          <svg role="img" aria-hidden="true" focusable="false" class="icon icon_copy">
            <use xlink:href="/images/sprites.svg#copy"></use>
          </svg>
          Copy URL
        </a>
        <span id="copy-url-done" hidden>&#10003;</span>
      </div>
    </div>
  {% endif %}
{% endif %}
<ul class="results_list">
  {% assign sortedHousingdb = housingdb | sort: "aptName" %}
  {% for address in sortedHousingdb %}
  <li>
    <h4>
      <a href="/housing/affordable-housing/{{address.id}}">{{ address.aptName }}</a> 
    </h4>
    <p>
      {% assign allStatuses = address.units | map: "openStatus" | uniq | sort | reverse %}
      {% for status in allStatuses %}
        <span class="badge
        {% if status == "Call for Status" %}
          badge__warn
        {% elsif status == "Waitlist Closed" %}
          badge__bad
        {% elsif status == "Waitlist Open" %}
          badge__ok
        {% endif %}
        ">{{ status }}</span>
        {% assign sortedUnits = address.units | where: "openStatus",  status | sortUnitType: "unitType" %}
        {% for unit in sortedUnits %}
          {% if unit.unitType %}
            <span class="badge">{{ unit.unitType }}</span>
          {% endif %}
        {% endfor %} 
        
      {% endfor %}
    </p>
    <address>
      {% if address.address and address.address != '' %}
        <p>
        {{ address.address }}{% if address.city and address.city != '' %}, {{ address.city }}{% endif %} <span class="noprint">(<a href="https://maps.google.com/maps?q={{ address.address | url_encode}} {{ address.city | url_encode}}&country=us" target="_blank" rel="noopener">map</a>)</span>
        </p>
      {% endif %}
      {% if address.email and address.email != '' %}
        <p>
          <a href="mailto:{{ address.email }}" target="_blank" rel="noopener">{{ address.email }}</a>
        </p>
      {% endif %}
      {% if address.phone and address.phone != '' %}
        <p>
          <a href="tel:+1{{ address.phone | replace: '-', '' }}">{{ address.phone }}</a>
        </p>
      {% endif %}
      {% if address.website and address.website != '' %}
        <a href="{{ address.website }}" target="_blank" rel="noopener">View property website</a><sup>&#8599;</sup>
      {% endif %}
    </address>

  </li>
  {% endfor %}
  {% if num_results == 0 %}
    <li class="no_results">
      Try changing the filter options above to broaden your search and see more results.
    </li>
  {% endif %}
</ul> 


<div>
<p>
  This affordable housing list is compiled from many separate housing lists across Santa Clara County in order to provide a single searchable resource.  We strive to be as accurate as possible, but always confirm property details with the property manager.
</p>
</div>
